{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmleh\\\\Desktop\\\\react-nodebird-self\\\\prepare\\\\front\\\\pages\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Home = function Home() {\n  _s();\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    function onScroll() {}\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener;\n    };\n  }, []);\n  var me = useSelector(function (state) {\n    return state.user.me;\n  });\n  var mainPosts = useSelector(function (state) {\n    return state.post.mainPosts;\n  });\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {\n      me: me\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }, _this), mainPosts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 39\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Home, \"Y31rGJ8COww4K20UOhW6h2oPUwE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/gmleh/Desktop/react-nodebird-self/prepare/front/pages/index.js"],"names":["React","useEffect","AppLayout","useDispatch","useSelector","PostCard","PostForm","LOAD_POSTS_REQUEST","Home","dispatch","type","onScroll","window","addEventListener","removeEventListener","me","state","user","mainPosts","post","map","id"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACf,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEH;AADD,KAAD,CAAR;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAN,EAAAA,SAAS,CAAC,YAAM;AACZ,aAASU,QAAT,GAAoB,CAEnB;;AACDC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAiCF,QAAjC;AACA,WAAO,YAAM;AACbC,MAAAA,MAAM,CAACE,mBAAP;AAEC,KAHD;AAIH,GATQ,EASN,EATM,CAAT;AAUA,MAAMC,EAAE,GAAGX,WAAW,CAAC,UAAAY,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWF,EAAf;AAAA,GAAN,CAAtB;AACA,MAAMG,SAAS,GAAGd,WAAW,CAAC,UAAAY,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAN,CAAWD,SAAf;AAAA,GAAN,CAA7B;AACA,sBACI,QAAC,SAAD;AAAA,eACKH,EAAE,iBAAG,QAAC,QAAD;AAAU,MAAA,EAAE,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA,aADV,EAEKG,SAAS,CAACE,GAAV,CAAc,UAACD,IAAD;AAAA,0BAAW,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,eAAX;AAAA,KAAd,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAMH,CA3BD;;GAAMb,I;UACeL,W,EAkBNC,W,EACOA,W;;;KApBhBI,I;AA6BN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport AppLayout from '../components/AppLayout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PostCard from '../components/PostCard'\r\nimport PostForm from '../components/PostForm'\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post'\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        function onScroll() {\r\n\r\n        }\r\n        window.addEventListener('scroll',onScroll);\r\n        return () => {\r\n        window.removeEventListener\r\n\r\n        }\r\n    }, [])\r\n    const me = useSelector(state => state.user.me)\r\n    const mainPosts = useSelector(state => state.post.mainPosts);\r\n    return (\r\n        <AppLayout>\r\n            {me &&<PostForm me={me}/>}\r\n            {mainPosts.map((post) =>  <PostCard key={post.id} post={post}/>)}\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}