{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport produce from 'immer';\nimport shortId from 'shortid';\nexport var initialState = {\n  mainPosts: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: '사용자2'\n    },\n    Images: [{\n      src: \"https://cdn.pixabay.com/photo/2021/01/24/20/47/mountains-5946500_1280.jpg\"\n    }],\n    Comments: ['댓글테스트']\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return _objectSpread({\n    id: shortId.generate()\n  }, data);\n};\n\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var addPostRequestAction = function addPostRequestAction(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addPostSuccessAction = function addPostSuccessAction(data) {\n  return {\n    type: ADD_POST_SUCCESS,\n    data: data\n  };\n};\nexport var addPostFailureAction = function addPostFailureAction(data) {\n  return {\n    type: ADD_POST_FAILURE\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\nexport var removePostRequestAction = function removePostRequestAction(data) {\n  return {\n    type: REMOVE_POST_REQUEST,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostDone = false;\n        draft.addPostError = action.err;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.postId;\n          });\n          post.Comments.unshift(dummyComment(action.data));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.err;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts.User = draft.mainPosts.User.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.err;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/gmleh/Desktop/react-nodebird-self/prepare/front/reducers/post.js"],"names":["produce","shortId","initialState","mainPosts","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","dummyPost","data","id","content","User","nickname","Images","src","Comments","dummyComment","generate","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","addPostRequestAction","type","addPostSuccessAction","addPostFailureAction","addComment","removePostRequestAction","reducer","state","action","draft","unshift","err","post","find","v","postId","filter"],"mappings":"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","sourcesContent":["import produce from 'immer'\r\nimport shortId from 'shortid'\r\n\r\nexport const initialState = {\r\n    mainPosts:[],\r\n    addPostLoading : false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n    addCommentLoading : false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n    removePostLoading : false,\r\n    removePostDone: false,\r\n    removePostError: null\r\n\r\n}\r\n\r\nconst dummyPost = (data) => ({\r\n    id: data.id,\r\n    content: data.content,\r\n    User:{\r\n        id:1,\r\n        nickname:'사용자2'\r\n    },\r\n    Images: [{src:\"https://cdn.pixabay.com/photo/2021/01/24/20/47/mountains-5946500_1280.jpg\"},],\r\n    Comments: ['댓글테스트'],\r\n})\r\nconst dummyComment = (data) => ({\r\n    id: shortId.generate(),\r\n    ...data,\r\n})\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const addPostRequestAction = (data) => ({\r\n    type: ADD_POST_REQUEST,\r\n    data\r\n})\r\nexport const addPostSuccessAction = (data) => ({\r\n    type: ADD_POST_SUCCESS,\r\n    data\r\n})\r\nexport const addPostFailureAction = (data) => ({\r\n    type: ADD_POST_FAILURE,\r\n})\r\n\r\nexport const addComment = (data) => ({\r\n    type: ADD_COMMENT_REQUEST,\r\n    data\r\n})\r\n\r\nexport const removePostRequestAction = (data) => ({\r\n    type: REMOVE_POST_REQUEST,\r\n    data\r\n})\r\n\r\n\r\nconst reducer = (state =  initialState, action) =>{\r\n    return produce(state,(draft) => {\r\n        switch (action.type) {\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoading = true;\r\n                draft.addPostDone = false;\r\n                draft.addPostError = null;\r\n                break;\r\n            case ADD_POST_SUCCESS:\r\n                draft.addPostLoading = false;\r\n                draft.addPostDone = true;\r\n                draft.mainPosts.unshift(dummyPost(action.data));\r\n                break;\r\n            case ADD_POST_FAILURE:\r\n                draft.addPostLoading = false;\r\n                draft.addPostDone = false;\r\n                draft.addPostError = action.err;\r\n                break;\r\n            case ADD_COMMENT_REQUEST:\r\n                draft.addCommentLoading = true;\r\n                draft.addCommentDone = false;\r\n                draft.addCommentError = null;\r\n                break;\r\n            case ADD_COMMENT_SUCCESS:{\r\n                const post = draft.mainPosts.find((v) => v.id === action.data.postId);\r\n                post.Comments.unshift(dummyComment(action.data))\r\n                draft.addCommentLoading = false;\r\n                draft.addCommentDone = true;\r\n                break;\r\n                }\r\n            case ADD_COMMENT_FAILURE:\r\n                draft.addCommentLoading = false;\r\n                draft.addCommentError = action.err;\r\n                break;\r\n\r\n                case REMOVE_POST_REQUEST:\r\n                draft.removePostLoading = true;\r\n                draft.removePostDone = false;\r\n                draft.removePostError = null;\r\n                break;\r\n            case REMOVE_POST_SUCCESS:\r\n                draft.removePostLoading = false;\r\n                draft.removePostDone = true;\r\n                draft.mainPosts.User = draft.mainPosts.User.filter((v) => v.id !== action.data);\r\n                break;\r\n            case REMOVE_POST_FAILURE:\r\n                draft.removePostLoading = false;\r\n                draft.removePostError = action.err;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    })\r\n}\r\n\r\nexport default reducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}