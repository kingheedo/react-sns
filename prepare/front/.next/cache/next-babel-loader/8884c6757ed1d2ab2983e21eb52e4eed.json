{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  mainPosts: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null\n};\n\nconst dummyPost = data => ({\n  id: 1,\n  content: data.content,\n  User: {\n    id: 2,\n    nickname: '사용자2'\n  },\n  Images: [{\n    src: \"https://res.cloudinary.com/dxfq3iotg/image/upload/v1557204172/banner_2.jpg\"\n  }],\n  Comments: ['댓글테스트']\n});\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const addPostRequestAction = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addPostSuccessAction = data => ({\n  type: ADD_POST_SUCCESS,\n  data\n});\nexport const addPostFailureAction = data => ({\n  type: ADD_POST_FAILURE\n});\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostDone = false;\n        draft.addPostError = action.err;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/gmleh/Desktop/react-nodebird-self/prepare/front/reducers/post.js"],"names":["produce","initialState","mainPosts","addPostLoading","addPostDone","addPostError","dummyPost","data","id","content","User","nickname","Images","src","Comments","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","addPostRequestAction","type","addPostSuccessAction","addPostFailureAction","reducer","state","action","draft","unshift","err"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAC,EADc;AAExBC,EAAAA,cAAc,EAAG,KAFO;AAGxBC,EAAAA,WAAW,EAAE,KAHW;AAIxBC,EAAAA,YAAY,EAAE;AAJU,CAArB;;AAQP,MAAMC,SAAS,GAAIC,IAAD,KAAW;AACzBC,EAAAA,EAAE,EAAE,CADqB;AAEzBC,EAAAA,OAAO,EAAEF,IAAI,CAACE,OAFW;AAGzBC,EAAAA,IAAI,EAAC;AACDF,IAAAA,EAAE,EAAC,CADF;AAEDG,IAAAA,QAAQ,EAAC;AAFR,GAHoB;AAOzBC,EAAAA,MAAM,EAAE,CAAC;AAACC,IAAAA,GAAG,EAAC;AAAL,GAAD,CAPiB;AAQzBC,EAAAA,QAAQ,EAAE,CAAC,OAAD;AARe,CAAX,CAAlB;;AAWA,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,oBAAoB,GAAIX,IAAD,KAAW;AAC3CY,EAAAA,IAAI,EAAEJ,gBADqC;AAE3CR,EAAAA;AAF2C,CAAX,CAA7B;AAIP,OAAO,MAAMa,oBAAoB,GAAIb,IAAD,KAAW;AAC3CY,EAAAA,IAAI,EAAEH,gBADqC;AAE3CT,EAAAA;AAF2C,CAAX,CAA7B;AAIP,OAAO,MAAMc,oBAAoB,GAAId,IAAD,KAAW;AAC3CY,EAAAA,IAAI,EAAEF;AADqC,CAAX,CAA7B;;AAGP,MAAMK,OAAO,GAAG,CAACC,KAAK,GAAItB,YAAV,EAAwBuB,MAAxB,KAAkC;AAC9C,SAAOxB,OAAO,CAACuB,KAAD,EAAQE,KAAD,IAAW;AAC5B,YAAQD,MAAM,CAACL,IAAf;AACI,WAAKJ,gBAAL;AACIU,QAAAA,KAAK,CAACtB,cAAN,GAAuB,IAAvB;AACAsB,QAAAA,KAAK,CAACrB,WAAN,GAAoB,KAApB;AACAqB,QAAAA,KAAK,CAACpB,YAAN,GAAqB,IAArB;AACA;;AACJ,WAAKW,gBAAL;AACIS,QAAAA,KAAK,CAACtB,cAAN,GAAuB,KAAvB;AACAsB,QAAAA,KAAK,CAACrB,WAAN,GAAoB,IAApB;AACAqB,QAAAA,KAAK,CAACvB,SAAN,CAAgBwB,OAAhB,CAAwBpB,SAAS,CAACkB,MAAM,CAACjB,IAAR,CAAjC;AACA;;AACJ,WAAKU,gBAAL;AACIQ,QAAAA,KAAK,CAACtB,cAAN,GAAuB,KAAvB;AACAsB,QAAAA,KAAK,CAACrB,WAAN,GAAoB,KAApB;AACAqB,QAAAA,KAAK,CAACpB,YAAN,GAAqBmB,MAAM,CAACG,GAA5B;AACA;;AACJ;AACI;AAjBR;AAmBH,GApBa,CAAd;AAqBH,CAtBD;;AAwBA,eAAeL,OAAf","sourcesContent":["import produce from 'immer'\r\n\r\nexport const initialState = {\r\n    mainPosts:[],\r\n    addPostLoading : false,\r\n    addPostDone: false,\r\n    addPostError: null\r\n\r\n}\r\n\r\nconst dummyPost = (data) => ({\r\n    id: 1,\r\n    content: data.content,\r\n    User:{\r\n        id:2,\r\n        nickname:'사용자2'\r\n    },\r\n    Images: [{src:\"https://res.cloudinary.com/dxfq3iotg/image/upload/v1557204172/banner_2.jpg\"},],\r\n    Comments: ['댓글테스트'],\r\n})\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const addPostRequestAction = (data) => ({\r\n    type: ADD_POST_REQUEST,\r\n    data\r\n})\r\nexport const addPostSuccessAction = (data) => ({\r\n    type: ADD_POST_SUCCESS,\r\n    data\r\n})\r\nexport const addPostFailureAction = (data) => ({\r\n    type: ADD_POST_FAILURE,\r\n})\r\nconst reducer = (state =  initialState, action) =>{\r\n    return produce(state,(draft) => {\r\n        switch (action.type) {\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoading = true;\r\n                draft.addPostDone = false;\r\n                draft.addPostError = null;\r\n                break;\r\n            case ADD_POST_SUCCESS:\r\n                draft.addPostLoading = false;\r\n                draft.addPostDone = true;\r\n                draft.mainPosts.unshift(dummyPost(action.data));\r\n                break;\r\n            case ADD_POST_FAILURE:\r\n                draft.addPostLoading = false;\r\n                draft.addPostDone = false;\r\n                draft.addPostError = action.err;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    })\r\n}\r\n\r\nexport default reducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}