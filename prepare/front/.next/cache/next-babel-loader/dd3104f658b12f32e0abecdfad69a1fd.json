{"ast":null,"code":"import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS } from '../reducers/user';\n\nfunction logInApi(data) {\n  return axios.get('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* wathLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nexport default function* userSaga() {\n  yield all([fork(wathLogIn)]);\n}","map":{"version":3,"sources":["C:/Users/gmleh/Desktop/react-nodebird-self/prepare/front/sagas/user.js"],"names":["all","fork","put","takeLatest","delay","axios","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","logInApi","data","get","logIn","action","type","err","error","response","wathLogIn","userSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,GAAnB,EAAwBC,UAAxB,EAAoCC,KAApC,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,cAAzC,QAA+D,kBAA/D;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAuB;AACnB,SAAOL,KAAK,CAACM,GAAN,CAAU,YAAV,EAAuBD,IAAvB,CAAP;AACH;;AACD,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACpB,MAAG;AACC,UAAMT,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAEN,cADA;AAENE,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFP,KAAD,CAAT;AAKH,GAPD,CAOC,OAAMK,GAAN,EAAU;AACP,UAAMb,GAAG,CAAE;AACPY,MAAAA,IAAI,EAAER,cADC;AAEPU,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAFb,KAAF,CAAT;AAIH;AACJ;;AAED,UAAUQ,SAAV,GAAsB;AAClB,QAAMf,UAAU,CAACI,cAAD,EAAiBK,KAAjB,CAAhB;AACH;;AAED,eAAe,UAAUO,QAAV,GAAoB;AAC/B,QAAMnB,GAAG,CAAC,CACNC,IAAI,CAACiB,SAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import {all, fork, put, takeLatest, delay } from 'redux-saga/effects'\r\nimport axios from 'axios'\r\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS } from '../reducers/user';\r\n\r\nfunction logInApi(data){\r\n    return axios.get('/api/login',data);\r\n}\r\nfunction* logIn(action) {\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: action.data\r\n        })\r\n\r\n    }catch(err){\r\n        yield put ({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* wathLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn)\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(wathLogIn),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}