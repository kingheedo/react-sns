{"ast":null,"code":"import { delay } from 'redux-saga/effects';\n\nfunction loginApi(data) {\n  return axios.get('/api/login', data);\n}\n\nfunction* login() {\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* wathLogin() {\n  yield takerLatest(LOG_IN_REQUEST, login);\n}\n\nexport default function* userSaga() {\n  yield all([fork(wathLogin)]);\n}","map":{"version":3,"sources":["C:/Users/gmleh/Desktop/react-nodebird-self/prepare/front/sagas/user.js"],"names":["delay","loginApi","data","axios","get","login","put","type","LOG_IN_SUCCESS","action","err","LOG_IN_FAILURE","error","response","wathLogin","takerLatest","LOG_IN_REQUEST","userSaga","all","fork"],"mappings":"AAAA,SAASA,KAAT,QAAsB,oBAAtB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAuB;AACnB,SAAOC,KAAK,CAACC,GAAN,CAAU,YAAV,EAAuBF,IAAvB,CAAP;AACH;;AACD,UAAUG,KAAV,GAAkB;AACd,MAAG;AACC,UAAML,KAAK,CAAC,IAAD,CAAX;AACA,UAAMM,GAAG,CAAC;AACNC,MAAAA,IAAI,EAAEC,cADA;AAENN,MAAAA,IAAI,EAAEO,MAAM,CAACP;AAFP,KAAD,CAAT;AAKH,GAPD,CAOC,OAAMQ,GAAN,EAAU;AACP,UAAMJ,GAAG,CAAE;AACPC,MAAAA,IAAI,EAAEI,cADC;AAEPC,MAAAA,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaX;AAFb,KAAF,CAAT;AAIH;AACJ;;AAED,UAAUY,SAAV,GAAsB;AAClB,QAAMC,WAAW,CAACC,cAAD,EAAiBX,KAAjB,CAAjB;AACH;;AAED,eAAe,UAAUY,QAAV,GAAoB;AAC/B,QAAMC,GAAG,CAAC,CACNC,IAAI,CAACL,SAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { delay } from 'redux-saga/effects'\r\n\r\nfunction loginApi(data){\r\n    return axios.get('/api/login',data);\r\n}\r\nfunction* login() {\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: action.data\r\n        })\r\n\r\n    }catch(err){\r\n        yield put ({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* wathLogin() {\r\n    yield takerLatest(LOG_IN_REQUEST, login)\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(wathLogin),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}