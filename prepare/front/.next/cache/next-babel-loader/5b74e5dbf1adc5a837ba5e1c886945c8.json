{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport produce from 'immer';\nimport shortId from 'shortid';\nimport faker from 'faker';\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null\n};\ninitialState.mainPosts = initialState.mainPosts.concat(Array(20).fill().map(function () {\n  return {\n    id: shortId.generate(),\n    content: faker.lorem.paragraph()\n  };\n}));\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: '사용자2'\n    },\n    Images: [{\n      src: \"https://cdn.pixabay.com/photo/2021/01/24/20/47/mountains-5946500_1280.jpg\"\n    }],\n    Comments: ['댓글테스트']\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return _objectSpread({\n    id: shortId.generate()\n  }, data);\n};\n\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var addPostRequestAction = function addPostRequestAction(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addPostSuccessAction = function addPostSuccessAction(data) {\n  return {\n    type: ADD_POST_SUCCESS,\n    data: data\n  };\n};\nexport var addPostFailureAction = function addPostFailureAction(data) {\n  return {\n    type: ADD_POST_FAILURE\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostDone = false;\n        draft.addPostError = action.err;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.postId;\n          });\n          post.Comments.unshift(dummyComment(action.data));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.err;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.err;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/gmleh/Desktop/react-nodebird-self/prepare/front/reducers/post.js"],"names":["produce","shortId","faker","initialState","mainPosts","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","concat","Array","fill","map","id","generate","content","lorem","paragraph","dummyPost","data","User","nickname","Images","src","Comments","dummyComment","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","addPostRequestAction","type","addPostSuccessAction","addPostFailureAction","addComment","reducer","state","action","draft","unshift","err","post","find","v","postId","filter"],"mappings":"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","sourcesContent":["import produce from 'immer'\r\nimport shortId from 'shortid'\r\nimport faker from 'faker'\r\n\r\nexport const initialState = {\r\n    mainPosts:[],\r\n    imagePaths:[],\r\n    addPostLoading : false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n    addCommentLoading : false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n    removePostLoading : false,\r\n    removePostDone: false,\r\n    removePostError: null\r\n\r\n}\r\ninitialState.mainPosts = initialState.mainPosts.concat(\r\n    Array(20).fill().map(() => ({\r\n    id: shortId.generate(),\r\n    content: faker.lorem.paragraph(),\r\n    \r\n})))\r\nconst dummyPost = (data) => ({\r\n    id: data.id,\r\n    content: data.content,\r\n    User:{\r\n        id:1,\r\n        nickname:'사용자2'\r\n    },\r\n    Images: [{src:\"https://cdn.pixabay.com/photo/2021/01/24/20/47/mountains-5946500_1280.jpg\"},],\r\n    Comments: ['댓글테스트'],\r\n})\r\nconst dummyComment = (data) => ({\r\n    id: shortId.generate(),\r\n    ...data,\r\n})\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const addPostRequestAction = (data) => ({\r\n    type: ADD_POST_REQUEST,\r\n    data\r\n})\r\nexport const addPostSuccessAction = (data) => ({\r\n    type: ADD_POST_SUCCESS,\r\n    data\r\n})\r\nexport const addPostFailureAction = (data) => ({\r\n    type: ADD_POST_FAILURE,\r\n})\r\n\r\nexport const addComment = (data) => ({\r\n    type: ADD_COMMENT_REQUEST,\r\n    data\r\n})\r\n\r\n\r\n\r\n\r\nconst reducer = (state =  initialState, action) =>{\r\n    return produce(state,(draft) => {\r\n        switch (action.type) {\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoading = true;\r\n                draft.addPostDone = false;\r\n                draft.addPostError = null;\r\n                break;\r\n            case ADD_POST_SUCCESS:\r\n                draft.addPostLoading = false;\r\n                draft.addPostDone = true;\r\n                draft.mainPosts.unshift(dummyPost(action.data));\r\n                break;\r\n            case ADD_POST_FAILURE:\r\n                draft.addPostLoading = false;\r\n                draft.addPostDone = false;\r\n                draft.addPostError = action.err;\r\n                break;\r\n            case ADD_COMMENT_REQUEST:\r\n                draft.addCommentLoading = true;\r\n                draft.addCommentDone = false;\r\n                draft.addCommentError = null;\r\n                break;\r\n            case ADD_COMMENT_SUCCESS:{\r\n                const post = draft.mainPosts.find((v) => v.id === action.data.postId);\r\n                post.Comments.unshift(dummyComment(action.data))\r\n                draft.addCommentLoading = false;\r\n                draft.addCommentDone = true;\r\n                break;\r\n                }\r\n            case ADD_COMMENT_FAILURE:\r\n                draft.addCommentLoading = false;\r\n                draft.addCommentError = action.err;\r\n                break;\r\n\r\n                case REMOVE_POST_REQUEST:\r\n                draft.removePostLoading = true;\r\n                draft.removePostDone = false;\r\n                draft.removePostError = null;\r\n                break;\r\n            case REMOVE_POST_SUCCESS:\r\n                draft.removePostLoading = false;\r\n                draft.removePostDone = true;\r\n                draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n                break;\r\n            case REMOVE_POST_FAILURE:\r\n                draft.removePostLoading = false;\r\n                draft.removePostError = action.err;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    })\r\n}\r\n\r\nexport default reducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}