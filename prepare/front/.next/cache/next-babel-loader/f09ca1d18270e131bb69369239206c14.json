{"ast":null,"code":"import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_COMMENT_REQUEST, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from '../reducers/post';\nimport shortId from 'shortid';\n\nfunction addPostApi() {\n  return axios.get('api/addpost', data);\n}\n\nfunction* addPost(action) {\n  try {\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentApi() {\n  return axios.get('api/addcomment', data);\n}\n\nfunction* addComment(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/gmleh/Desktop/react-nodebird-self/prepare/front/sagas/post.js"],"names":["all","fork","put","takeLatest","delay","axios","ADD_COMMENT_REQUEST","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","shortId","addPostApi","get","data","addPost","action","id","generate","type","content","err","response","addCommentApi","addComment","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,GAAnB,EAAwBC,UAAxB,EAAoCC,KAApC,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,EAAgDC,gBAAhD,EAAkEC,gBAAlE,QAA0F,kBAA1F;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAIA,SAASC,UAAT,GAAsB;AAClB,SAAON,KAAK,CAACO,GAAN,CAAU,aAAV,EAAwBC,IAAxB,CAAP;AACH;;AACD,UAAUC,OAAV,CAAmBC,MAAnB,EAA0B;AACtB,MAAG;AACC,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAMY,EAAE,GAAGN,OAAO,CAACO,QAAR,EAAX;AACA,UAAMf,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAAET,gBADA;AAENI,MAAAA,IAAI,EAAC;AACDG,QAAAA,EADC;AAEDG,QAAAA,OAAO,EAAEJ,MAAM,CAACF;AAFf;AAFC,KAAD,CAAT;AAQH,GAXD,CAWC,OAAMO,GAAN,EAAU;AACP,UAAMlB,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAACX,gBADC;AAENM,MAAAA,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,SAASS,aAAT,GAAyB;AACrB,SAAOjB,KAAK,CAACO,GAAN,CAAU,gBAAV,EAA2BC,IAA3B,CAAP;AACH;;AACD,UAAUU,UAAV,CAAsBR,MAAtB,EAA6B;AACzB,MAAG;AACC,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAAEM,mBADA;AAENX,MAAAA,IAAI,EAAC;AACDG,QAAAA,EADC;AAEDG,QAAAA,OAAO,EAAEJ,MAAM,CAACF;AAFf;AAFC,KAAD,CAAT;AAQH,GAVD,CAUC,OAAMO,GAAN,EAAU;AACP,UAAMlB,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAACO,mBADC;AAENZ,MAAAA,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;AAFb,KAAD,CAAT;AAIH;AACJ;;AACD,UAAUa,YAAV,GAAyB;AACvB,QAAMvB,UAAU,CAACK,gBAAD,EAAmBM,OAAnB,CAAhB;AACD;;AACD,UAAUa,eAAV,GAA4B;AAC1B,QAAMxB,UAAU,CAACG,mBAAD,EAAsBiB,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUK,QAAV,GAAoB;AAC/B,QAAM5B,GAAG,CAAC,CACNC,IAAI,CAACyB,YAAD,CADE,EAENzB,IAAI,CAAC0B,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import {all, fork, put, takeLatest, delay } from 'redux-saga/effects'\r\nimport axios from 'axios'\r\nimport { ADD_COMMENT_REQUEST, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from '../reducers/post';\r\nimport shortId from 'shortid'\r\n\r\n\r\n\r\nfunction addPostApi() {\r\n    return axios.get('api/addpost',data)\r\n}\r\nfunction* addPost (action){\r\n    try{\r\n        yield delay(1000);\r\n        const id = shortId.generate();\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data:{\r\n                id,\r\n                content: action.data\r\n            }\r\n        })\r\n        \r\n    }catch(err){\r\n        yield put({\r\n            type:ADD_POST_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction addCommentApi() {\r\n    return axios.get('api/addcomment',data)\r\n}\r\nfunction* addComment (action){\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data:{\r\n                id,\r\n                content: action.data\r\n            }\r\n        })\r\n        \r\n    }catch(err){\r\n        yield put({\r\n            type:ADD_COMMENT_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}