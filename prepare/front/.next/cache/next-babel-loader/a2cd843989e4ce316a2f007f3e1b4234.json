{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(wathLogin),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { delay } from 'redux-saga/effects';\nimport { LOG_IN_SUCCESS } from '../reducers/user';\n\nfunction loginApi(data) {\n  return axios.get('/api/login', data);\n}\n\nfunction login() {\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 11;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction wathLogin() {\n  return _regeneratorRuntime.wrap(function wathLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takerLatest(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(wathLogin)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/Users/gmleh/Desktop/react-nodebird-self/prepare/front/sagas/user.js"],"names":["login","wathLogin","userSaga","delay","LOG_IN_SUCCESS","loginApi","data","axios","get","put","type","action","LOG_IN_FAILURE","error","response","takerLatest","LOG_IN_REQUEST","all","fork"],"mappings":";;oDAMUA,K;qDAgBAC,S;qDAIeC,Q;;AA1BzB,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAuB;AACnB,SAAOC,KAAK,CAACC,GAAN,CAAU,YAAV,EAAuBF,IAAvB,CAAP;AACH;;AACD,SAAUN,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMG,KAAK,CAAC,IAAD,CAAX;;AAFR;AAAA;AAGQ,iBAAMM,GAAG,CAAC;AACNC,YAAAA,IAAI,EAAEN,cADA;AAENE,YAAAA,IAAI,EAAEK,MAAM,CAACL;AAFP,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASQ,iBAAMG,GAAG,CAAE;AACPC,YAAAA,IAAI,EAAEE,cADC;AAEPC,YAAAA,KAAK,EAAE,YAAIC,QAAJ,CAAaR;AAFb,WAAF,CAAT;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAUL,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMc,WAAW,CAACC,cAAD,EAAiBhB,KAAjB,CAAjB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMe,GAAG,CAAC,CACNC,IAAI,CAACjB,SAAD,CADE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { delay } from 'redux-saga/effects'\r\nimport { LOG_IN_SUCCESS } from '../reducers/user';\r\n\r\nfunction loginApi(data){\r\n    return axios.get('/api/login',data);\r\n}\r\nfunction* login() {\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: action.data\r\n        })\r\n\r\n    }catch(err){\r\n        yield put ({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* wathLogin() {\r\n    yield takerLatest(LOG_IN_REQUEST, login)\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(wathLogin),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}