{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport produce from 'immer';\nexport const initialState = {\n  logInLoading: false,\n  logInDone: false,\n  logInError: null,\n  me\n};\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: '희도',\n  id: 1\n});\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data\n});\nexport const loginSuccessAction = data => ({\n  type: LOG_IN_SUCCESS,\n  data\n});\nexport const loginFailureAction = data => ({\n  type: LOG_IN_FAILURE,\n  data\n});\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true;\n        draft.logInDone = false;\n        draft.logInError = null;\n        break;\n\n      case LOG_IN_SUCCESS:\n        sdraft.logInLoading = false;\n        draft.logInDone = true;\n        draft.me = dummyUser(action.data);\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/gmleh/Desktop/react-nodebird-self/prepare/front/reducers/user.js"],"names":["produce","initialState","logInLoading","logInDone","logInError","me","dummyUser","data","nickname","id","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","loginRequestAction","type","loginSuccessAction","loginFailureAction","reducer","state","action","draft","sdraft","error"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,YAAY,EAAG,KADS;AAExBC,EAAAA,SAAS,EAAE,KAFa;AAGxBC,EAAAA,UAAU,EAAE,IAHY;AAIxBC,EAAAA;AAJwB,CAArB;;AAMP,MAAMC,SAAS,GAAKC,IAAD,oCACZA,IADY;AAEfC,EAAAA,QAAQ,EAAC,IAFM;AAGfC,EAAAA,EAAE,EAAC;AAHY,EAAnB;;AAMA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,kBAAkB,GAAIN,IAAD,KAAW;AACzCO,EAAAA,IAAI,EAAEJ,cADmC;AAEzCH,EAAAA;AAFyC,CAAX,CAA3B;AAIP,OAAO,MAAMQ,kBAAkB,GAAIR,IAAD,KAAW;AACzCO,EAAAA,IAAI,EAAEH,cADmC;AAEzCJ,EAAAA;AAFyC,CAAX,CAA3B;AAIP,OAAO,MAAMS,kBAAkB,GAAIT,IAAD,KAAW;AACzCO,EAAAA,IAAI,EAAEF,cADmC;AAEzCL,EAAAA;AAFyC,CAAX,CAA3B;;AAKP,MAAMU,OAAO,GAAG,CAACC,KAAK,GAAGjB,YAAT,EAAuBkB,MAAvB,KAAiC;AAC7C,SAAOnB,OAAO,CAACkB,KAAD,EAAQE,KAAD,IAAW;AAC5B,YAAOD,MAAM,CAACL,IAAd;AACI,WAAKJ,cAAL;AACAU,QAAAA,KAAK,CAAClB,YAAN,GAAqB,IAArB;AACAkB,QAAAA,KAAK,CAACjB,SAAN,GAAkB,KAAlB;AACAiB,QAAAA,KAAK,CAAChB,UAAN,GAAmB,IAAnB;AAEA;;AACA,WAAKO,cAAL;AACAU,QAAAA,MAAM,CAACnB,YAAP,GAAsB,KAAtB;AACAkB,QAAAA,KAAK,CAACjB,SAAN,GAAkB,IAAlB;AACAiB,QAAAA,KAAK,CAACf,EAAN,GAAWC,SAAS,CAACa,MAAM,CAACZ,IAAR,CAApB;AACA;;AAEA,WAAKK,cAAL;AACAQ,QAAAA,KAAK,CAAClB,YAAN,GAAqB,KAArB;AACAkB,QAAAA,KAAK,CAAChB,UAAN,GAAmBe,MAAM,CAACG,KAA1B;AACA;AAhBJ;AAoBH,GArBa,CAAd;AAsBH,CAvBD","sourcesContent":["import produce from 'immer';\r\nexport const initialState = {\r\n    logInLoading : false,\r\n    logInDone: false,\r\n    logInError: null,\r\n    me,\r\n}\r\nconst dummyUser =  (data) => ({\r\n    ...data,\r\n    nickname:'희도',\r\n    id:1,\r\n\r\n})\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const loginRequestAction = (data) => ({\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n})\r\nexport const loginSuccessAction = (data) => ({\r\n    type: LOG_IN_SUCCESS,\r\n    data,\r\n}) \r\nexport const loginFailureAction = (data) => ({\r\n    type: LOG_IN_FAILURE,\r\n    data,\r\n}) \r\n\r\nconst reducer = (state = initialState, action) =>{\r\n    return produce(state,(draft) => {\r\n        switch(action.type) {\r\n            case LOG_IN_REQUEST:\r\n            draft.logInLoading = true;\r\n            draft.logInDone = false;\r\n            draft.logInError = null;\r\n\r\n            break;\r\n            case LOG_IN_SUCCESS:\r\n            sdraft.logInLoading = false;\r\n            draft.logInDone = true;\r\n            draft.me = dummyUser(action.data)\r\n            break;\r\n\r\n            case LOG_IN_FAILURE:\r\n            draft.logInLoading = false;\r\n            draft.logInError = action.error;\r\n            break;\r\n\r\n\r\n        }\r\n    })\r\n} "]},"metadata":{},"sourceType":"module"}