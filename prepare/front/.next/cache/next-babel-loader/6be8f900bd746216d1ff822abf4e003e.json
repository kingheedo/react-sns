{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmleh\\\\Desktop\\\\react-nodebird-self\\\\prepare\\\\front\\\\components\\\\CommentForm.js\";\nimport React, { useCallback, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { addComment, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const dispatch = useDispatch();\n  const [commentText, OnChangeCommentText] = useInput('');\n  const onSubmitComment = useCallback(e => {\n    e.preventDefault();\n    dispatch(addComment({\n      content: commentText,\n      postId: post.id\n    }));\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmitComment,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        style: {\n          position: 'relative'\n        },\n        controlId: \"exampleForm.ControlTextarea1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          srOnly: true,\n          children: \"Example textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3,\n          onChange: OnChangeCommentText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0\n        },\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"\\uAC8C\\uC2DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["C:/Users/gmleh/Desktop/react-nodebird-self/prepare/front/components/CommentForm.js"],"names":["React","useCallback","useState","Form","Button","PropTypes","useDispatch","useSelector","useInput","addComment","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","CommentForm","post","id","state","user","me","dispatch","commentText","OnChangeCommentText","onSubmitComment","e","preventDefault","content","postId","position","right","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,WAAd,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAAQC,IAAR,EAAaC,MAAb,QAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,UAAR,EAAoBC,mBAApB,EAAyCC,mBAAzC,QAAmE,kBAAnE;;;;AACA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC5B,QAAMC,EAAE,GAAGP,WAAW,CAACQ,KAAK;AAAA;;AAAA,6BAAIA,KAAK,CAACC,IAAN,CAAWC,EAAf,mDAAI,eAAeH,EAAnB;AAAA,GAAN,CAAtB;AACA,QAAMI,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM,CAACa,WAAD,EAAcC,mBAAd,IAAqCZ,QAAQ,CAAC,EAAD,CAAnD;AAEA,QAAMa,eAAe,GAAGpB,WAAW,CAC9BqB,CAAD,IAAO;AACHA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,QAAQ,CAACT,UAAU,CAAC;AAChBe,MAAAA,OAAO,EAAEL,WADO;AAEhBM,MAAAA,MAAM,EAAEZ,IAAI,CAACC;AAFG,KAAD,CAAX,CAAR;AAIH,GAP8B,EAQ/B,CAACK,WAAD,CAR+B,CAAnC;AAUA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEE,eAAhB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAE;AAACK,UAAAA,QAAQ,EAAC;AAAV,SAAnB;AAA0C,QAAA,SAAS,EAAC,8BAApD;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,MAAM,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,EAAE,EAAC,UAAjB;AAA4B,UAAA,IAAI,EAAE,CAAlC;AAAqC,UAAA,QAAQ,EAAEN;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAACM,UAAAA,QAAQ,EAAC,UAAV;AAAsBC,UAAAA,KAAK,EAAC;AAA5B,SAAf;AAAgD,QAAA,OAAO,EAAC,SAAxD;AAAkE,QAAA,IAAI,EAAC,QAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAcH,CA7BD;;AA8BAf,WAAW,CAACgB,SAAZ,GAAwB;AACpBf,EAAAA,IAAI,EAAER,SAAS,CAACwB,MAAV,CAAiBC;AADH,CAAxB;AAGA,eAAelB,WAAf","sourcesContent":["import React,{useCallback, useState} from 'react'\r\nimport {Form,Button} from 'react-bootstrap'\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useInput from '../hooks/useInput'\r\nimport {addComment, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS} from '../reducers/post'\r\nconst CommentForm = ({post}) => {\r\n    const id = useSelector(state => state.user.me?.id);\r\n    const dispatch = useDispatch();\r\n    const [commentText, OnChangeCommentText] = useInput('')\r\n\r\n    const onSubmitComment = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            dispatch(addComment({\r\n                content: commentText,\r\n                postId: post.id\r\n            }))\r\n        },\r\n        [commentText],\r\n    )\r\n    return (\r\n        <>\r\n            <Form onSubmit={onSubmitComment}>\r\n                <Form.Group style={{position:'relative'}} controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Label srOnly>Example textarea</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} onChange={OnChangeCommentText}/>\r\n                </Form.Group>\r\n                <Button style={{position:'absolute', right:0,}} variant=\"primary\" type=\"submit\">\r\n                게시\r\n                </Button>\r\n            </Form>\r\n            \r\n        </>\r\n    )\r\n}\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n}\r\nexport default CommentForm\r\n"]},"metadata":{},"sourceType":"module"}