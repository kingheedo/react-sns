{"ast":null,"code":"import produce from 'immer';\nexport var initialState = {\n  logInLoading: false,\n  logInDone: false,\n  logInError: null,\n  me: me\n};\n\nvar dummyUser = function dummyUser(data) {};\n\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var loginSuccessAction = function loginSuccessAction(data) {\n  return {\n    type: LOG_IN_SUCCESS,\n    data: data\n  };\n};\nexport var loginFailureAction = function loginFailureAction(data) {\n  return {\n    type: LOG_IN_FAILURE,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true;\n        draft.logInDone = false;\n        draft.logInError = null;\n        break;\n\n      case LOG_IN_SUCCESS:\n        sdraft.logInLoading = false;\n        draft.logInDone = true;\n        draft.me = dummyUser(action.data);\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/gmleh/Desktop/react-nodebird-self/prepare/front/reducers/user.js"],"names":["produce","initialState","logInLoading","logInDone","logInError","me","dummyUser","data","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","loginRequestAction","type","loginSuccessAction","loginFailureAction","reducer","state","action","draft","sdraft","error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,OAAO,IAAMC,YAAY,GAAG;AACxBC,EAAAA,YAAY,EAAG,KADS;AAExBC,EAAAA,SAAS,EAAE,KAFa;AAGxBC,EAAAA,UAAU,EAAE,IAHY;AAIxBC,EAAAA,EAAE,EAAFA;AAJwB,CAArB;;AAMP,IAAMC,SAAS,GAAI,SAAbA,SAAa,CAACC,IAAD,EAAU,CAE5B,CAFD;;AAIA,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACJ,IAAD;AAAA,SAAW;AACzCK,IAAAA,IAAI,EAAEJ,cADmC;AAEzCD,IAAAA,IAAI,EAAJA;AAFyC,GAAX;AAAA,CAA3B;AAIP,OAAO,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAACN,IAAD;AAAA,SAAW;AACzCK,IAAAA,IAAI,EAAEH,cADmC;AAEzCF,IAAAA,IAAI,EAAJA;AAFyC,GAAX;AAAA,CAA3B;AAIP,OAAO,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAACP,IAAD;AAAA,SAAW;AACzCK,IAAAA,IAAI,EAAEF,cADmC;AAEzCH,IAAAA,IAAI,EAAJA;AAFyC,GAAX;AAAA,CAA3B;;AAKP,IAAMQ,OAAO,GAAG,SAAVA,OAAU,GAAiC;AAAA,MAAhCC,KAAgC,uEAAxBf,YAAwB;AAAA,MAAVgB,MAAU;AAC7C,SAAOjB,OAAO,CAACgB,KAAD,EAAO,UAACE,KAAD,EAAW;AAC5B,YAAOD,MAAM,CAACL,IAAd;AACI,WAAKJ,cAAL;AACAU,QAAAA,KAAK,CAAChB,YAAN,GAAqB,IAArB;AACAgB,QAAAA,KAAK,CAACf,SAAN,GAAkB,KAAlB;AACAe,QAAAA,KAAK,CAACd,UAAN,GAAmB,IAAnB;AAEA;;AACA,WAAKK,cAAL;AACAU,QAAAA,MAAM,CAACjB,YAAP,GAAsB,KAAtB;AACAgB,QAAAA,KAAK,CAACf,SAAN,GAAkB,IAAlB;AACAe,QAAAA,KAAK,CAACb,EAAN,GAAWC,SAAS,CAACW,MAAM,CAACV,IAAR,CAApB;AACA;;AAEA,WAAKG,cAAL;AACAQ,QAAAA,KAAK,CAAChB,YAAN,GAAqB,KAArB;AACAgB,QAAAA,KAAK,CAACd,UAAN,GAAmBa,MAAM,CAACG,KAA1B;AACA;AAhBJ;AAoBH,GArBa,CAAd;AAsBH,CAvBD","sourcesContent":["import produce from 'immer';\r\nexport const initialState = {\r\n    logInLoading : false,\r\n    logInDone: false,\r\n    logInError: null,\r\n    me,\r\n}\r\nconst dummyUser =  (data) => {\r\n    \r\n}\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const loginRequestAction = (data) => ({\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n})\r\nexport const loginSuccessAction = (data) => ({\r\n    type: LOG_IN_SUCCESS,\r\n    data,\r\n}) \r\nexport const loginFailureAction = (data) => ({\r\n    type: LOG_IN_FAILURE,\r\n    data,\r\n}) \r\n\r\nconst reducer = (state = initialState, action) =>{\r\n    return produce(state,(draft) => {\r\n        switch(action.type) {\r\n            case LOG_IN_REQUEST:\r\n            draft.logInLoading = true;\r\n            draft.logInDone = false;\r\n            draft.logInError = null;\r\n\r\n            break;\r\n            case LOG_IN_SUCCESS:\r\n            sdraft.logInLoading = false;\r\n            draft.logInDone = true;\r\n            draft.me = dummyUser(action.data)\r\n            break;\r\n\r\n            case LOG_IN_FAILURE:\r\n            draft.logInLoading = false;\r\n            draft.logInError = action.error;\r\n            break;\r\n\r\n\r\n        }\r\n    })\r\n} "]},"metadata":{},"sourceType":"module"}