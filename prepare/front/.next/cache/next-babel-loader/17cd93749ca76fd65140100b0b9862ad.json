{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmleh\\\\Desktop\\\\react-nodebird-self\\\\prepare\\\\front\\\\components\\\\FollowButton.js\";\nimport React, { useCallback } from 'react';\nimport { Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FollowButton = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    followLoading,\n    unfollowLoading\n  } = useSelector(state => state.user);\n  const isFollowing = me && me.Followings.find(v => v.id === post.User.id);\n  const onClickButton = useCallback(() => {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW.REQUEST\n      });\n    } else {\n      dispatch({\n        type: FOLLOW.REQUEST\n      });\n    }\n  }, [isFollowing]);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: onClickButton,\n    style: {\n      float: 'right'\n    },\n    variant: \"outline-primary\",\n    children: isFollowing ? '언팔로우' : '팔로우'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\nFollowButton.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    content: PropTypes.string,\n    createdAt: PropTypes.object\n  }).isRequired\n};\nexport default FollowButton;","map":{"version":3,"sources":["C:/Users/gmleh/Desktop/react-nodebird-self/prepare/front/components/FollowButton.js"],"names":["React","useCallback","Button","PropTypes","useDispatch","useSelector","FollowButton","post","dispatch","me","state","user","followLoading","unfollowLoading","isFollowing","Followings","find","v","id","User","onClickButton","type","UNFOLLOW","REQUEST","FOLLOW","float","propTypes","shape","number","object","Images","arrayOf","Comments","content","string","createdAt","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC7B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAACK,IAAAA;AAAD,MAAOJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAxB;AACA,QAAM;AAACC,IAAAA,aAAD;AAAeC,IAAAA;AAAf,MAAkCR,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAnD;AACA,QAAMG,WAAW,GAAGL,EAAE,IAAIA,EAAE,CAACM,UAAH,CAAcC,IAAd,CAAoBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASX,IAAI,CAACY,IAAL,CAAUD,EAA7C,CAA1B;AACA,QAAME,aAAa,GAAGnB,WAAW,CAAC,MAAM;AAChC,QAAGa,WAAH,EAAe;AACXN,MAAAA,QAAQ,CAAC;AACLa,QAAAA,IAAI,EAAEC,QAAQ,CAACC;AADV,OAAD,CAAR;AAGH,KAJD,MAKQ;AACAf,MAAAA,QAAQ,CAAC;AACLa,QAAAA,IAAI,EAAEG,MAAM,CAACD;AADR,OAAD,CAAR;AAGH;AAER,GAZ4B,EAY3B,CAACT,WAAD,CAZ2B,CAAjC;AAcA,sBACA,QAAC,MAAD;AAAS,IAAA,OAAO,EAAGM,aAAnB;AAAkC,IAAA,KAAK,EAAE;AAACK,MAAAA,KAAK,EAAC;AAAP,KAAzC;AAA2D,IAAA,OAAO,EAAC,iBAAnE;AAAA,cACKX,WAAW,GAAG,MAAH,GAAY;AAD5B;AAAA;AAAA;AAAA;AAAA,UADA;AAMH,CAzBD;;AA2BAR,YAAY,CAACoB,SAAb,GAAyB;AACjBnB,EAAAA,IAAI,EAAEJ,SAAS,CAACwB,KAAV,CAAgB;AACtBT,IAAAA,EAAE,EAAEf,SAAS,CAACyB,MADQ;AAEtBT,IAAAA,IAAI,EAAEhB,SAAS,CAAC0B,MAFM;AAGtBC,IAAAA,MAAM,EAAE3B,SAAS,CAAC4B,OAAV,CAAkB5B,SAAS,CAAC0B,MAA5B,CAHc;AAItBG,IAAAA,QAAQ,EAAE7B,SAAS,CAAC4B,OAAV,CAAkB5B,SAAS,CAAC0B,MAA5B,CAJY;AAKtBI,IAAAA,OAAO,EAAE9B,SAAS,CAAC+B,MALG;AAMtBC,IAAAA,SAAS,EAAEhC,SAAS,CAAC0B;AANC,GAAhB,EAOPO;AARkB,CAAzB;AAUA,eAAe9B,YAAf","sourcesContent":["import React, { useCallback } from 'react'\r\nimport {Button} from 'react-bootstrap'\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nconst FollowButton = ({post}) => {\r\n    const dispatch = useDispatch()\r\n    const {me} = useSelector(state => state.user)\r\n    const {followLoading,unfollowLoading} = useSelector(state => state.user)\r\n    const isFollowing = me && me.Followings.find((v) => v.id === post.User.id) \r\n    const onClickButton = useCallback(() => {\r\n            if(isFollowing){\r\n                dispatch({\r\n                    type: UNFOLLOW.REQUEST\r\n                })\r\n            }\r\n                else{\r\n                    dispatch({\r\n                        type: FOLLOW.REQUEST\r\n                    })\r\n                }\r\n            \r\n        },[isFollowing]\r\n    )\r\n    return (\r\n    <Button  onClick= {onClickButton} style={{float:'right',}} variant=\"outline-primary\">\r\n        {isFollowing ? '언팔로우' : '팔로우'}\r\n    </Button>\r\n    \r\n    )\r\n}\r\n\r\nFollowButton.propTypes = {\r\n        post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n    }).isRequired,\r\n}\r\nexport default FollowButton\r\n"]},"metadata":{},"sourceType":"module"}