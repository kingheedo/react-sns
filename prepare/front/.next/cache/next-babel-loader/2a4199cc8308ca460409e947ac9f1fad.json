{"ast":null,"code":"import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../reducers/user';\n\nfunction signupApi(data) {\n  return axios.post('/api/signup', data);\n}\n\nfunction* signup(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInApi(data) {\n  return axios.get('/api/login');\n}\n\nfunction* logIn(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutApi() {\n  return axios.get('api/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE\n    });\n  }\n}\n\nfunction followApi() {\n  return axios.get('api/follow');\n}\n\nfunction* follow(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE\n    });\n  }\n}\n\nfunction unfollowApi() {\n  return axios.get('api/unfollow');\n}\n\nfunction* unfollow(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchSignUp), fork(watchFollow), fork(watchUnFollow), fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["C:/Users/gmleh/Desktop/react-nodebird-self/prepare/front/sagas/user.js"],"names":["all","fork","put","takeLatest","delay","axios","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","signupApi","data","post","signup","action","type","err","error","response","logInApi","get","logIn","logOutApi","logOut","followApi","follow","unfollowApi","unfollow","watchLogIn","watchLogOut","watchSignUp","watchFollow","watchUnFollow","userSaga"],"mappings":"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","sourcesContent":["import {all, fork, put, takeLatest, delay } from 'redux-saga/effects'\r\nimport axios from 'axios'\r\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../reducers/user';\r\n\r\n\r\nfunction signupApi(data){\r\n    return axios.post('/api/signup',data);\r\n}\r\nfunction* signup(action) {\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n            data: action.data,\r\n        })\r\n\r\n    }catch(err){\r\n        yield put ({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction logInApi(data){\r\n    return axios.get('/api/login');\r\n}\r\nfunction* logIn(action) {\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: action.data,\r\n        })\r\n\r\n    }catch(err){\r\n        yield put ({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction logOutApi() {\r\n    return axios.get('api/logout')\r\n}\r\nfunction* logOut (){\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:LOG_OUT_SUCCESS\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type:LOG_OUT_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction followApi() {\r\n    return axios.get('api/follow')\r\n}\r\nfunction* follow (action){\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:FOLLOW_SUCCESS,\r\n            data: action.data\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type:UNFOLLOW_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction unfollowApi() {\r\n    return axios.get('api/unfollow')\r\n}\r\nfunction* unfollow (action){\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:UNFOLLOW_SUCCESS,\r\n            data: action.data\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type:UNFOLLOW_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signup);\r\n}\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnFollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(watchSignUp),\r\n        fork(watchFollow),\r\n        fork(watchUnFollow),\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}