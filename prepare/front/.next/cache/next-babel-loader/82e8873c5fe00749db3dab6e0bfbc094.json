{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gmleh\\\\Desktop\\\\react-nodebird-self\\\\prepare\\\\front\\\\components\\\\CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { addComment } from '../reducers/post';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var me = useSelector(function (state) {\n    return state.user.me;\n  });\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var nickname = useSelector(function (state) {\n    var _state$user$me2;\n\n    return (_state$user$me2 = state.user.me) === null || _state$user$me2 === void 0 ? void 0 : _state$user$me2.nickname;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentLoading = _useSelector.addCommentLoading;\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      commentText = _useInput2[0],\n      OnChangeCommentText = _useInput2[1],\n      setCommentText = _useInput2[2];\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentDone = _useSelector2.addCommentDone;\n\n  useEffect(function () {\n    if (addCommentDone) setCommentText('');\n  }, [addCommentDone]);\n  var onSubmitComment = useCallback(function (e) {\n    e.preventDefault();\n\n    if (!(me && me.id)) {\n      Router.push('/');\n    }\n\n    if (!me) {\n      return null;\n    }\n\n    dispatch(addComment({\n      content: commentText,\n      postId: post.id,\n      User: {\n        userId: id,\n        userNickname: nickname\n      }\n    }));\n  }, [me, commentText, me && me.id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmitComment,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        style: {\n          position: 'relative'\n        },\n        controlId: \"exampleForm.ControlTextarea1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          srOnly: true,\n          children: \"Example textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3,\n          value: commentText,\n          onChange: OnChangeCommentText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: addCommentLoading,\n        style: {\n          position: 'absolute',\n          right: 0\n        },\n        variant: \"primary\",\n        type: \"submit\",\n        children: addCommentLoading ? 'Loading…' : '게시'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false);\n};\n\n_s(CommentForm, \"m/YVvXTEaUQ59fDN7BNtutjv09w=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch, useInput, useSelector];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Users/gmleh/Desktop/react-nodebird-self/prepare/front/components/CommentForm.js"],"names":["React","useCallback","useEffect","useState","Form","Button","PropTypes","useDispatch","useSelector","useInput","addComment","Link","Router","CommentForm","post","me","state","user","id","nickname","addCommentLoading","dispatch","commentText","OnChangeCommentText","setCommentText","addCommentDone","onSubmitComment","e","preventDefault","push","content","postId","User","userId","userNickname","position","right","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React,{useCallback, useEffect, useState} from 'react'\r\nimport {Form,Button} from 'react-bootstrap'\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useInput from '../hooks/useInput'\r\nimport {addComment} from '../reducers/post'\r\nimport Link from 'next/link'\r\nimport Router from 'next/router'\r\nconst CommentForm = ({post}) => {\r\n    const me = useSelector(state => state.user.me);\r\n    const id = useSelector(state => state.user.me?.id);\r\n    const nickname = useSelector(state => state.user.me?.nickname);\r\n    const {addCommentLoading} = useSelector(state => state.post);\r\n    const dispatch = useDispatch();\r\n    const [commentText, OnChangeCommentText,setCommentText] = useInput('')\r\n    const {addCommentDone} = useSelector(state => state.post)\r\n\r\n    useEffect(() => {\r\n        if(addCommentDone)\r\n        setCommentText('')\r\n        \r\n    }, [addCommentDone])\r\n    const onSubmitComment = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            if(!(me && me.id)){\r\n            Router.push('/')\r\n            }\r\n            if(!me){\r\n                return null;\r\n            }\r\n            dispatch(addComment({\r\n                content: commentText,\r\n                postId: post.id,\r\n                User:{\r\n                    userId: id,\r\n                    userNickname: nickname,\r\n                }\r\n            }))\r\n        },\r\n        [me,commentText,me && me.id],\r\n    )\r\n    return (\r\n        <>\r\n            <Form onSubmit={onSubmitComment}>\r\n                <Form.Group style={{position:'relative'}} controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Label srOnly>Example textarea</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} value={commentText} onChange={OnChangeCommentText}/>\r\n                </Form.Group>\r\n                <Button disabled={addCommentLoading} style={{position:'absolute', right:0,}} variant=\"primary\" type=\"submit\">\r\n                {addCommentLoading ? 'Loading…' : '게시'}\r\n                </Button>\r\n            </Form>\r\n            \r\n        </>\r\n    )\r\n}\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n}\r\nexport default CommentForm\r\n"]},"metadata":{},"sourceType":"module"}