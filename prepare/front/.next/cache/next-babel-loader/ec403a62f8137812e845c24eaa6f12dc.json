{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmleh\\\\Desktop\\\\react-nodebird-self\\\\prepare\\\\front\\\\pages\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const me = useSelector(state => state.user.me);\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostLoading\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostLoading) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, loadPostLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {\n      me: me\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this), mainPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 39\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/gmleh/Desktop/react-nodebird-self/prepare/front/pages/index.js"],"names":["React","useEffect","AppLayout","useDispatch","useSelector","PostCard","PostForm","LOAD_POSTS_REQUEST","Home","dispatch","me","state","user","mainPosts","hasMorePost","loadPostLoading","post","type","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;;AACA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,EAAE,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,EAArB,CAAtB;AACA,QAAM;AAACG,IAAAA,SAAD;AAAWC,IAAAA,WAAX;AAAuBC,IAAAA;AAAvB,MAA0CX,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACK,IAAhB,CAA3D;AACAf,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEV;AADD,KAAD,CAAR;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAN,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASiB,QAAT,GAAoB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAnB,EAA4BC,QAAQ,CAACC,eAAT,CAAyBC,YAArD,EAAmEF,QAAQ,CAACC,eAAT,CAAyBE,YAA5F;;AACA,UAAGL,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAApG,EAAwG;AACpG,YAAGZ,WAAW,IAAI,CAACC,eAAnB,EAAmC;AAC/BN,UAAAA,QAAQ,CAAC;AACTQ,YAAAA,IAAI,EAAEV;AADG,WAAD,CAAR;AAGH;AAEJ;AACJ;;AACDc,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAiCT,QAAjC;AACA,WAAO,MAAM;AACbG,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAoCV,QAApC;AACC,KAFD;AAGH,GAhBQ,EAgBN,CAACJ,WAAD,EAAcC,eAAd,CAhBM,CAAT;AAkBA,sBACI,QAAC,SAAD;AAAA,eACKL,EAAE,iBAAG,QAAC,QAAD;AAAU,MAAA,EAAE,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA,YADV,EAEKG,SAAS,CAACgB,GAAV,CAAeb,IAAD,iBAAW,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA;AAA9B,OAAeA,IAAI,CAACc,EAApB;AAAA;AAAA;AAAA;AAAA,YAAzB,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAlCD;;AAoCA,eAAetB,IAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport AppLayout from '../components/AppLayout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PostCard from '../components/PostCard'\r\nimport PostForm from '../components/PostForm'\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post'\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const me = useSelector(state => state.user.me)\r\n    const {mainPosts,hasMorePost,loadPostLoading} = useSelector(state => state.post);\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        function onScroll() {\r\n            console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight)\r\n            if(window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300){\r\n                if(hasMorePost && !loadPostLoading){\r\n                    dispatch({\r\n                    type: LOAD_POSTS_REQUEST,\r\n                })\r\n                }\r\n                \r\n            }\r\n        }\r\n        window.addEventListener('scroll',onScroll);\r\n        return () => {\r\n        window.removeEventListener('scroll',onScroll)\r\n        }\r\n    }, [hasMorePost, loadPostLoading])\r\n    \r\n    return (\r\n        <AppLayout>\r\n            {me &&<PostForm me={me}/>}\r\n            {mainPosts.map((post) =>  <PostCard key={post.id} post={post}/>)}\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}